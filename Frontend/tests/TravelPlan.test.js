import { fireEvent, render, screen, waitFor } from "@testing-library/react";
import TravelPlan from "../src/pages/TravelPlan";
import "@testing-library/jest-dom";
import axios from "axios";
import { BrowserRouter } from "react-router-dom";

jest.mock("axios");
jest.mock("./src/components/GoogleMapView", () => {
  return jest.fn(() => <div>Mock Google Map View</div>); // Render a simple div
});


beforeEach(() => {
  const travelStyle = {
    startDate: "2025.05.13",
    endDate: "2025.05.15",
    departure: "ÏÑúÏö∏Ïó≠",
    destination: "Î∂ÄÏÇ∞Ïó≠",
    emotion: ["ÏÑ§Î†àÎäî"],
    companion: ["ÏπúÍµ¨ÏôÄ"],
    peopleCount: 2,
  };
  localStorage.setItem("travelStyle", JSON.stringify(travelStyle));
});

const mockApiResponse = {
  data: {
    startDate: '2025.05.13',
    endDate: '2025.05.15',
    aiEmpathy:
      "ÏôÄÏïÑ~ ÏßÄÍ∏à Í∏∞Î∂ÑÏù¥ ÎÑàÎ¨¥ Ï¢ãÏùÄ Í±∞ÏûñÏïÑ? üòÜÏù¥Ï†úÎäî ÎÇòÎ•º ÏúÑÌïú ÌûêÎßÅ Ïó¨Ìñâ Îî± Í∞à ÌÉÄÏù¥Î∞çÏù¥ÎÑ§!Í∑∏Îüº Ïù¥ Í∏∞Î∂Ñ Í∑∏ÎåÄÎ°ú Ïù¥Ïñ¥ÏÑú, ÏÑúÏö∏ÏóêÏÑú 2Î∞ï 3Ïùº ÎèôÏïà Ï†úÎåÄÎ°ú Ï¶êÍ∏∏ Ïàò ÏûàÎäî Í∏∞Î∂Ñ ÏµúÍ≥† ÌûêÎßÅ&ÎøåÎìØ Ïó¨Ìñâ ÏΩîÏä§ Ï∂îÏ≤úÌï¥Ï§ÑÍ≤å! ‚ú®",
    tags: ["ÎØ∏Ïãù", "Í∞êÏÑ±", "Î∞îÎã§", "Ïó¨Ïú†"],
    plans: [
      {
        day: 1,
        schedule: [
          {
            time: "09:00",
            placeType: "Ï≤¥ÌÅ¨ÏïÑÏõÉ",
            place: "Ìò∏ÌÖî Î∂ÄÏÇ∞",
            placeId: "213",
            aiComment: "Ïò§ÏÖòÎ∑∞ Í∞ùÏã§ÏóêÏÑú Ïó¨Ïú†Î°úÏö¥ ÏãúÏûë",
          },
          {
            time: "12:00",
            placeType: "Ï†êÏã¨ ÏãùÏÇ¨",
            place: "Ï≤≠Ï∂ò ÌöüÏßë",
            placeId: "214",
            aiComment: "ÌòÑÏßÄÏù∏Ïù¥ Ï∂îÏ≤úÌïòÎäî Ïã†ÏÑ†Ìïú ÌöåÏôÄ Î¨ºÌöå",
          },
        ],
      },
      {
        day: 2,
        schedule: [
          {
            time: "10:00",
            placeType: "Ïπ¥Ìéò",
            place: "Ïò®ÎçîÌîåÎ†àÏù¥Ìä∏",
            placeId: "301",
            aiComment: "ÌïúÍ∞ï Î∑∞Î•º Ï¶êÍ∏∏ Ïàò ÏûàÎäî Í∞êÏÑ± Ïπ¥Ìéò",
          },
          {
            time: "14:00",
            placeType: "Í¥ÄÍ¥ë",
            place: "NÏÑúÏö∏ÌÉÄÏõå",
            placeId: "302",
            aiComment: "ÏÑúÏö∏ Ï†ÑÍ≤ΩÏùÑ ÌïúÎààÏóê Î≥º Ïàò ÏûàÎäî Î™ÖÏÜå",
          },
        ],
      },
    ],
  },
};

describe("TravelPlan Component", () => {
  test("Ïó¨Ìñâ ÏùºÏ†ï Ï∂îÏ≤ú from API data", async () => {
    axios.post.mockResolvedValueOnce(mockApiResponse);

    render(
      <BrowserRouter>
        <TravelPlan />
      </BrowserRouter>
    );

    // aiEmpathy Î¨∏Íµ¨ ÌôïÏù∏
    await waitFor(() =>
      expect(screen.getByText((content) => content.includes("ÌûêÎßÅ Ïó¨Ìñâ"))).toBeInTheDocument()
    );

    // ÏùºÏ†ïÏùò Ïû•ÏÜåÎ™ÖÏù¥ ÌôîÎ©¥Ïóê ÎÇòÏò§ÎäîÏßÄ ÌôïÏù∏
    expect(await screen.findByText(/Ï≤≠Ï∂ò ÌöüÏßë/)).toBeInTheDocument();
    expect(await screen.findByText(/Ìò∏ÌÖî Î∂ÄÏÇ∞/)).toBeInTheDocument();

    // ÏãúÍ∞Ñ ÌôïÏù∏
    expect(await screen.findByText(/09:00/)).toBeInTheDocument();


    // Day2Î°ú Ï†ÑÌôò
    const day2Button = await screen.findByText("2");
    fireEvent.click(day2Button);
    expect(await screen.findByText(/Ïò®ÎçîÌîåÎ†àÏù¥Ìä∏/)).toBeInTheDocument();

    // ÌÉúÍ∑∏Í∞Ä ÌëúÏãúÎêòÎäîÏßÄ ÌôïÏù∏
    const tags = await screen.findAllByText(text => text.includes("ÎØ∏Ïãù"));
    expect(tags.length).toBeGreaterThan(0);
    // screen.debug();

    const stored = JSON.parse(localStorage.getItem("travelStyle"));
    console.log("stored: ", stored);
  });
});